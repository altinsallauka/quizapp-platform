[{"C:\\projects\\quiz-node-api-master\\client\\src\\index.js":"1","C:\\projects\\quiz-node-api-master\\client\\src\\App.js":"2","C:\\projects\\quiz-node-api-master\\client\\src\\reportWebVitals.js":"3","C:\\projects\\quiz-node-api-master\\client\\src\\components\\PostQuestion.jsx":"4","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\index.js":"5","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\reportWebVitals.js":"6","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\App.js":"7","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\Dashboard.jsx":"8","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\login\\Login.jsx":"9","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\create-question\\PostQuestion.jsx":"10","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\questions\\QuestionsList.jsx":"11","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\categories\\CategoriesList.jsx":"12","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\create-category\\PostCategory.jsx":"13","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\role-page\\RolePage.jsx":"14","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\nav-bar\\NavBar.jsx":"15"},{"size":500,"mtime":499162500000,"results":"16","hashOfConfig":"17"},{"size":1107,"mtime":1620421164663,"results":"18","hashOfConfig":"17"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"17"},{"size":3678,"mtime":1620422828388,"results":"20","hashOfConfig":"17"},{"size":517,"mtime":1621032218506,"results":"21","hashOfConfig":"22"},{"size":375,"mtime":1620688451552,"results":"23","hashOfConfig":"22"},{"size":2388,"mtime":1622040078282,"results":"24","hashOfConfig":"22"},{"size":2481,"mtime":1622040090831,"results":"25","hashOfConfig":"22"},{"size":1628,"mtime":1620750441719,"results":"26","hashOfConfig":"22"},{"size":5288,"mtime":1621631822492,"results":"27","hashOfConfig":"22"},{"size":10601,"mtime":1621604520119,"results":"28","hashOfConfig":"22"},{"size":4888,"mtime":1621605533462,"results":"29","hashOfConfig":"22"},{"size":1690,"mtime":1621607236276,"results":"30","hashOfConfig":"22"},{"size":465,"mtime":1622039767615,"results":"31","hashOfConfig":"22"},{"size":1154,"mtime":1622038191727,"results":"32","hashOfConfig":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"og8y6w",{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"mmmeej",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\projects\\quiz-node-api-master\\client\\src\\index.js",[],["66","67"],"C:\\projects\\quiz-node-api-master\\client\\src\\App.js",[],"C:\\projects\\quiz-node-api-master\\client\\src\\reportWebVitals.js",[],"C:\\projects\\quiz-node-api-master\\client\\src\\components\\PostQuestion.jsx",[],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\index.js",[],["68","69"],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\reportWebVitals.js",[],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\App.js",["70"],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\Dashboard.jsx",["71"],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\login\\Login.jsx",[],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\create-question\\PostQuestion.jsx",[],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\questions\\QuestionsList.jsx",["72"],"import React from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./QuestionsList.scss\";\r\nimport { Link } from \"react-router-dom\";\r\n// import editImageSrc from \"../../../assets/edit.png\";\r\n// import deleteImageSrc from \"../../../assets/delete.png\";\r\nimport BootstrapTable from \"react-bootstrap-table-next\";\r\nimport paginationFactory from \"react-bootstrap-table2-paginator\";\r\n// import * as ReactBootStrap from \"react-bootstrap\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nexport default class QuestionsList extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      rowId: \"\",\r\n      questions: [],\r\n      numberOfQuestions: \"\",\r\n      numberOfCategories: \"\",\r\n      columns: [\r\n        // {\r\n        //   dataField: \"_id\",\r\n        //   text: \"ID\",\r\n        // },\r\n        { dataField: \"description\", text: \"Question\" },\r\n        {\r\n          dataField: \"update\",\r\n          text: \"Update\",\r\n          editable: false,\r\n          formatter: (cellContent, row) => {\r\n            this.setState({ rowId: row._id });\r\n            return (\r\n              <button\r\n                className=\"btn btn-primary btn-xs\"\r\n                // onClick={() => console.log(\"updated\", row._id)}\r\n                onClick={() => this.handleModalUpdate()}\r\n              >\r\n                Edit\r\n              </button>\r\n            );\r\n          },\r\n        },\r\n        {\r\n          dataField: \"delete\",\r\n          text: \"Delete\",\r\n          editable: false,\r\n          formatter: (cellContent, row) => {\r\n            this.setState({ rowId: row._id });\r\n            return (\r\n              <button\r\n                className=\"btn btn-danger btn-xs\"\r\n                // onClick={() => console.log(\"deleted\", row._id)}\r\n                onClick={() => this.handleModalDelete()}\r\n              >\r\n                Delete\r\n              </button>\r\n            );\r\n          },\r\n        },\r\n      ],\r\n      showHideDelete: false,\r\n      showHideUpdate: false,\r\n      toUpdate: [],\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  handleChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n    const {\r\n      description,\r\n      correct,\r\n      option_one,\r\n      option_two,\r\n      option_three,\r\n      option_four,\r\n    } = this.state;\r\n    const { data } = await axios.put(\r\n      `http://localhost:3001/questions/${this.state.rowId}`,\r\n      {\r\n        description,\r\n        correct,\r\n        option_one,\r\n        option_two,\r\n        option_three,\r\n        option_four,\r\n      }\r\n    );\r\n    console.log(data.data);\r\n    this.props.history.push(\"/questions\");\r\n  }\r\n  handleModalDelete() {\r\n    this.setState({ showHideDelete: !this.state.showHideDelete });\r\n  }\r\n  handleModalUpdate() {\r\n    this.setState({ showHideUpdate: !this.state.showHideUpdate });\r\n    // axios\r\n    //   .get(`http://localhost:3001/questions/${this.state.rowId}`)\r\n    //   .then((res) => {\r\n    //     console.log(\"question\", res.data);\r\n    //     this.setState({ toUpdate: res.data });\r\n    //   });\r\n  }\r\n  getQuestions() {\r\n    axios.get(`http://localhost:3001/questions`).then((res) => {\r\n      const questions = res.data;\r\n      this.setState({ questions });\r\n      const numberOfQuestions = res.data.length;\r\n      this.setState({ numberOfQuestions });\r\n    });\r\n    // axios.get(`http://localhost:3001/numberOfQuestions`).then((res) => {\r\n    //   const numberOfQuestions = res.data;\r\n    //   this.setState({ numberOfQuestions });\r\n    // });\r\n  }\r\n  deleteRow(id) {\r\n    axios.delete(`http://localhost:3001/questions/${id}`).then((res) => {\r\n      this.handleModalDelete();\r\n      this.getQuestions();\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.getQuestions();\r\n    axios.get(`http://localhost:3001/categories`).then((res) => {\r\n      const numberOfCategories = res.data.length;\r\n      this.setState({ numberOfCategories });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1 className=\"mt-4\"></h1>\r\n        <div className=\"row mt-4\">\r\n          <div className=\"col\">\r\n            <div className=\"row bd-box shadow-sm\">\r\n              <div className=\"col-md-8\">\r\n                <h2>Number of questions</h2>\r\n              </div>\r\n              <div className=\"col-md-4 num-bx\">\r\n                <h1>{this.state.numberOfQuestions}</h1>\r\n                <span>\r\n                  <Link to={\"/create-question\"} className=\"nav-link\">\r\n                    Create question\r\n                  </Link>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"col\">\r\n            <div className=\"row bd-box shadow-sm\">\r\n              <div className=\"col-md-8\">\r\n                <h2>Number of categories</h2>\r\n              </div>\r\n              <div className=\"col-md-4 num-bx\">\r\n                <h1>{this.state.numberOfCategories}</h1>\r\n                <span>\r\n                  <Link to={\"/categories\"} className=\"nav-link\">\r\n                    Categories\r\n                  </Link>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"row mt-3\">\r\n          <caption>List of questions</caption>\r\n          <BootstrapTable\r\n            keyField=\"_id\"\r\n            data={this.state.questions}\r\n            columns={this.state.columns}\r\n            pagination={paginationFactory()}\r\n          />\r\n          {/* Delete */}\r\n          <Modal show={this.state.showHideDelete}>\r\n            <Modal.Header closeButton onClick={() => this.handleModalDelete()}>\r\n              <Modal.Title>Are you sure?</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              Do you really want to delete this question? This process cannot be\r\n              undone.\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"secondary\"\r\n                onClick={() => this.handleModalDelete()}\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={() => this.deleteRow(this.state.rowId)}\r\n              >\r\n                Delete\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          {/* Update */}\r\n          <Modal show={this.state.showHideUpdate}>\r\n            <form onSubmit={this.handleSubmit}>\r\n              <Modal.Header\r\n                closeButton\r\n                onClick={() => this.handleModalUpdate()}\r\n              >\r\n                <Modal.Title>Edit question</Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <label className=\"d-flex flex-column align-items-start\">\r\n                  Description:\r\n                  <input\r\n                    type=\"text\"\r\n                    name=\"description\"\r\n                    className=\"form-control\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </label>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <label className=\"d-flex flex-column align-items-start\">\r\n                    First option:\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"option_one\"\r\n                      className=\"form-control\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"correct\"\r\n                    value=\"0\"\r\n                    className=\"form-check-input\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <label className=\"d-flex flex-column align-items-start\">\r\n                    Second option:\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"option_two\"\r\n                      className=\"form-control\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"correct\"\r\n                    value=\"1\"\r\n                    className=\"form-check-input\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <label className=\"d-flex flex-column align-items-start\">\r\n                    Third option:\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"option_three\"\r\n                      className=\"form-control\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"correct\"\r\n                    value=\"2\"\r\n                    className=\"form-check-input\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n                <div className=\"d-flex align-items-center\">\r\n                  <label className=\"d-flex flex-column align-items-start\">\r\n                    Forth option:\r\n                    <input\r\n                      type=\"text\"\r\n                      name=\"option_four\"\r\n                      className=\"form-control\"\r\n                      onChange={this.handleChange}\r\n                    />\r\n                  </label>\r\n                  <input\r\n                    type=\"radio\"\r\n                    name=\"correct\"\r\n                    value=\"3\"\r\n                    className=\"form-check-input\"\r\n                    onChange={this.handleChange}\r\n                  />\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <Button\r\n                  variant=\"secondary\"\r\n                  onClick={() => this.handleModalUpdate()}\r\n                >\r\n                  Cancel\r\n                </Button>\r\n                <Button\r\n                  type=\"submit\"\r\n                  value=\"submit\"\r\n                  variant=\"primary\"\r\n                  // onClick={() => this.deleteRow(this.state.rowId)}\r\n                  onClick={() => this.handleSubmit()}\r\n                >\r\n                  Update\r\n                </Button>\r\n              </Modal.Footer>\r\n            </form>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\categories\\CategoriesList.jsx",[],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\create-category\\PostCategory.jsx",[],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\role-page\\RolePage.jsx",["73"],"C:\\projects\\quiz-app-nodejs-reactjs-mern\\client\\src\\components\\dashboard\\nav-bar\\NavBar.jsx",["74"],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"81","severity":1,"message":"82","line":2,"column":50,"nodeType":"83","messageId":"84","endLine":2,"endColumn":54},{"ruleId":"81","severity":1,"message":"82","line":2,"column":50,"nodeType":"83","messageId":"84","endLine":2,"endColumn":54},{"ruleId":"85","severity":1,"message":"86","line":136,"column":9,"nodeType":"87","endLine":136,"endColumn":30},{"ruleId":"81","severity":1,"message":"88","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":13},{"ruleId":"81","severity":1,"message":"88","line":4,"column":8,"nodeType":"83","messageId":"84","endLine":4,"endColumn":13},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],["89"],["90"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement","'axios' is defined but never used.","no-global-assign","no-unsafe-negation"]